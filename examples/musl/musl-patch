diff --git a/ldso/dynlink.c b/ldso/dynlink.c
index ceca3c98..8c13bdc3 100644
--- a/ldso/dynlink.c
+++ b/ldso/dynlink.c
@@ -1581,7 +1581,7 @@ static void do_init_fini(struct dso **queue)
 	pthread_t self = __pthread_self();
 
 	pthread_mutex_lock(&init_fini_lock);
-	for (i=0; (p=queue[i]); i++) {
+	for (i=0; queue && (p=queue[i]); i++) {
 		while ((p->ctor_visitor && p->ctor_visitor!=self) || shutting_down)
 			pthread_cond_wait(&ctor_cond, &init_fini_lock);
 		if (p->ctor_visitor || p->constructed)
@@ -1630,6 +1630,17 @@ weak_alias(dl_debug_state, _dl_debug_state);
 
 void __init_tls(size_t *auxv)
 {
+    /** /!\ CUSTOM IMPLEMENTATION FOR SQUID /!\ **/
+
+    (void) auxv;
+
+	libc.tls_align = MIN_TLS_ALIGN;
+	libc.tls_size = sizeof builtin_tls;
+    libc.tls_cnt = 0;
+    libc.tls_head = NULL;
+
+	if (__init_tp(__copy_tls((unsigned char*) builtin_tls)) < 0)
+		a_crash();
 }
 
 static void update_tls_size()
@@ -1794,6 +1805,7 @@ void __dls2b(size_t *sp, size_t *auxv)
  * process dependencies and relocations for the main application and
  * transfer control to its entry point. */
 
+__attribute__((__noreturn__))
 void __dls3(size_t *sp, size_t *auxv)
 {
 	static struct dso app, vdso;
@@ -2071,7 +2083,6 @@ void __dls3(size_t *sp, size_t *auxv)
 	errno = 0;
 
 	CRTJMP((void *)aux[AT_ENTRY], argv-1);
-	for(;;);
 }
 
 static void prepare_lazy(struct dso *p)
diff --git a/src/stdio/fopen.c b/src/stdio/fopen.c
index 80bc341e..afcf9afb 100644
--- a/src/stdio/fopen.c
+++ b/src/stdio/fopen.c
@@ -29,3 +29,6 @@ FILE *fopen(const char *restrict filename, const char *restrict mode)
 	__syscall(SYS_close, fd);
 	return 0;
 }
+
+weak_alias(fopen, fopen64);
+
diff --git a/src/stdio/fseek.c b/src/stdio/fseek.c
index c7425802..97a680a9 100644
--- a/src/stdio/fseek.c
+++ b/src/stdio/fseek.c
@@ -46,3 +46,5 @@ int fseek(FILE *f, long off, int whence)
 }
 
 weak_alias(__fseeko, fseeko);
+weak_alias(__fseeko, fseeko64);
+
diff --git a/src/stdio/ftell.c b/src/stdio/ftell.c
index 1e1a08d8..9009e776 100644
--- a/src/stdio/ftell.c
+++ b/src/stdio/ftell.c
@@ -37,3 +37,4 @@ long ftell(FILE *f)
 }
 
 weak_alias(__ftello, ftello);
+weak_alias(__ftello, ftello64);
